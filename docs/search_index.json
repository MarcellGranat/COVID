[
["index.html", "COVID Absztrakt", " COVID Granát Marcell Absztrakt Kézirat lezárásának dátuma: 2021. jnauár 3. A tanulmány a 2020-as az Új jövőkép MNB Tanulmányi Verseny Új Demográfiai Program szekciójába készült, melyben Kiváló pályamű díjat nyert. A kézirat tartalmához fűzödő tudományos diszkusszió támogatása érdekében egy párbeszéd ablak került megnyitásra az anyagokat tartalmazó GitHub repository oldalán: https://github.com/MarcellGranat/ujdemografiaiprogram/discussions p { text-align: justify; } .author { font-size: 20px; text-align: center; } .title { text-align: center; } Tanulmányomban az egy főre eső GDP és munkanélküliség teljes termékenységi arányszámra gyakorolt hatását elemzem. A választott eszközök között szerepel az Engel-Granger kointegrációs teszt, amellyel megerősítettem a hipotézist, hogy szomszédos országok termékenységi rátájának alakulása általában nagyobb egyezőséget mutat, melynek magyarázata lehet a közös gazdasági környezet és kultúra. Második választott eszköz a vektor autoregresszív modellek készítése, melyekből levonható konklúzió, hogy a GDP/fő pozitívan, míg a munkanélküliségi ráta negatívan befolyásolja a termékenységi arányszámot, de kettő közül előbbi alakulása fontosabb. Harmadik eszközként panel modellt választottam a Magyarországi megyékre, mely tanulmányom fő hozzáadott értékét képviseli. Statisztikailag szignifikáns magyarázóváltozónak bizonyult GDP/fő, hatása egy évvel később érvényesül, továbbá határhatása csökkenő, és 7 340 000 Ft-ig növekvő. Ez alapján elmondható, hogy a termékenységi ráta növelése szempontjából a szegényebb régiók egy főre eső bruttó kibocsátásának növelése javasolt. "],
["Chapter-1.html", "Bevezetés", " Bevezetés p { text-align: justify; } Tanulmányomban elemezni kívánom a termékenységi ráta kapcsolatát az egy főre eső bruttó kibocsátással és a munkanélküliségi rátával. A dolgozat főként az idősor- és panelökonometria eszközeire támaszkodom, a választott eszközök: Engel-Granger teszt, vektor autoregresszív modellek, fixhatású longitudinális modell. Elsőként az OECD által közölt termékenységi rátákon végzek kointegrációs vizsgálatot, ahol hipotézisem, hogy egymással szomszédos országok termékenységi arányszámai hasonló pályát járnak be, ami a közös gazdasági- és kulturális környezetből fakad. Ezt követően VAR modellel elemzem a termékenységi ráta, a GDP/fő és munkanélkülisági ráta kapcsolatát. Végül panel modellt készítek az előbb a termékenységi rátára, ahol megyei szintű adatokat használok fel. Ezzel az általam elért szakirodalomban nem találkoztam, és ahogyan az az irodalom feldolgozásomból majd kitűnik, eltérő eszközök eltérő irányú hatást mutatnak ki a jövedelem és a gyermekvállalási hajlandóság között. Ennek megfelelően a hatások irányára előzetes hipotézist nem teszek fel. "],
["Chapter-2.html", "Döntési fa Adatok bemutatása", " Döntési fa p { text-align: justify; } Az egyik talán legfontosabb kérdés a járványügyben, hogy mennyire halálos a vírus. Már a megjelenésekor nagyon hamar ismertté vált a tény: elsősorban az idősekre és krónikus betegre jelent kockázatot. Ennek a ténynek empirikus teszteléséhez olyan adattáblára van szükségünk, melyben rögzítésre kerülnek a megfertőzöttek demográfiai adatai és az eset végső kimenete (ezt a fajta adattípust nevezik “line list”-nek). Adatok bemutatása Forrás A fentebb leírt célra lett létrehozva egy nyílt projekt1, amely során ezeket az adatokat több országra gyűjtik ki és teszi online elérhetővé. dat &lt;- vroom::vroom(&#39;latestdata.csv&#39;) Az adattábla összesen 2676311 megfigyelést tartalmaz 33 változóval. Azonban a változók jelentős része használhatatlan elemzésre és jelentős mértékben van szükség az adatok tisztítására is. Egyetlen példa említéseként a kimenetben nem egyszerűen died vagy elhunyt szerepelt, hanem annak számos szinonímája is, amelett, hogy sok esetben nincs elérhető adat. set.seed(1) dat %&gt;% count(outcome) %&gt;% na.omit() %&gt;% {mutate(., s = runif(n = nrow(.)))} %&gt;% ggplot(aes(label = outcome, size = s)) + geom_text_wordcloud(color = &#39;aquamarine4&#39;) + scale_size_area(max_size = 10) + labs(title = &quot;Az nyers adattáblában a kimenet változó által felvett értékek&quot;) + theme_minimal() Adatok elemzéshez való előkészítése Az adatok megtiszítása előtt el kell döntenünk, hogy mely változókkal is érdemes foglalkozni, mivel sajnos számos változó esetében hiányzik rengeteg sor a táblában. dat %&gt;% apply(2, function(x) sum(is.na(x))) %&gt;% {data.frame(var = names(.), nobs = nrow(dat)-., robs = (nrow(dat)-.)/nrow(dat))} %&gt;% set_names(&#39;var&#39;, &#39;Hiánytalan adatok száma&#39;, &#39;Hiánytalanok aránya&#39;) %&gt;% gt( rowname_col = &quot;var&quot; ) %&gt;% fmt_percent( columns = vars(&#39;Hiánytalanok aránya&#39;), dec_mark = &#39;,&#39; ) %&gt;% tab_header(title = &#39;Adattáblában lévő hiánytalan megfigyelések aránya&#39;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #pamufqigws .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #pamufqigws .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #pamufqigws .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #pamufqigws .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 4px; border-top-color: #FFFFFF; border-top-width: 0; } #pamufqigws .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #pamufqigws .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #pamufqigws .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #pamufqigws .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #pamufqigws .gt_column_spanner_outer:first-child { padding-left: 0; } #pamufqigws .gt_column_spanner_outer:last-child { padding-right: 0; } #pamufqigws .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; overflow-x: hidden; display: inline-block; width: 100%; } #pamufqigws .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #pamufqigws .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #pamufqigws .gt_from_md > :first-child { margin-top: 0; } #pamufqigws .gt_from_md > :last-child { margin-bottom: 0; } #pamufqigws .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #pamufqigws .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #pamufqigws .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #pamufqigws .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #pamufqigws .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #pamufqigws .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #pamufqigws .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #pamufqigws .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #pamufqigws .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #pamufqigws .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #pamufqigws .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #pamufqigws .gt_sourcenote { font-size: 90%; padding: 4px; } #pamufqigws .gt_left { text-align: left; } #pamufqigws .gt_center { text-align: center; } #pamufqigws .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #pamufqigws .gt_font_normal { font-weight: normal; } #pamufqigws .gt_font_bold { font-weight: bold; } #pamufqigws .gt_font_italic { font-style: italic; } #pamufqigws .gt_super { font-size: 65%; } #pamufqigws .gt_footnote_marks { font-style: italic; font-size: 65%; } Adattáblában lévő hiánytalan megfigyelések aránya Hiánytalan adatok száma Hiánytalanok aránya ID 2676311 100,00&percnt; age 578018 21,60&percnt; sex 580157 21,68&percnt; city 1698630 63,47&percnt; province 2223647 83,09&percnt; country 2676196 100,00&percnt; latitude 2676250 100,00&percnt; longitude 2676250 100,00&percnt; geo_resolution 2676250 100,00&percnt; date_onset_symptoms 261599 9,77&percnt; date_admission_hospital 116211 4,34&percnt; date_confirmation 2567822 95,95&percnt; symptoms 0 0,00&percnt; lives_in_Wuhan 0 0,00&percnt; travel_history_dates 2611 0,10&percnt; travel_history_location 9222 0,34&percnt; reported_market_exposure 0 0,00&percnt; additional_information 45855 1,71&percnt; chronic_disease_binary 2676311 100,00&percnt; chronic_disease 0 0,00&percnt; source 2109347 78,82&percnt; sequence_available 0 0,00&percnt; outcome 307382 11,49&percnt; date_death_or_discharge 0 0,00&percnt; notes_for_discussion 0 0,00&percnt; location 13376 0,50&percnt; admin3 80434 3,01&percnt; admin2 826054 30,87&percnt; admin1 1257558 46,99&percnt; country_new 2645758 98,86&percnt; admin_id 2676250 100,00&percnt; data_moderator_initials 1742983 65,13&percnt; travel_history_binary 2610732 97,55&percnt; Open COVID-19 Data Working Group, Detailed Epidemiological Data from the COVID-19 Outbreak, http://virological.org/t/epidemiological-data-from-the-ncov-2019-outbreak-early-descriptions-from-publicly-available-data/337, letöltve: 2020.12.28.↩︎ "],
["Chapter-3.html", "A Guardian napilap COVID-19-el kapcsolatos címeinek elemzése", " A Guardian napilap COVID-19-el kapcsolatos címeinek elemzése p { text-align: justify; } Guardian headlineok #521-ig lehetett visszamenni a keresésben for (i in 1:100) { URL &lt;- paste(&quot;https://www.theguardian.com/world/coronavirus-outbreak+uk/uk?page=&quot;, i, sep = &quot;&quot;) page &lt;- read_html(URL) title &lt;- html_text(html_nodes(page, &quot;.js-headline-text&quot;)) time &lt;- html_text(html_nodes(page, &quot;.fc-date-headline&quot;))[1] #Van olyan hogy egy lapon két dátum is szerepel, heti bontás miatt ez nem probléma if (i==1){ data_raw &lt;- data.frame(time, title) } else{ data_raw &lt;- rbind(data_raw, data.frame(time, title)) } } #Nem volt olyan CSS kód ami egyértelműen jelölte volna ki a címeket, így duplikálva kerültek be a #dataframebe, minden másodikat ki kellett törölni data_cleansed &lt;- data_raw %&gt;% filter(!duplicated(title)) %&gt;% {mutate(., id = seq(nrow(.)))} %&gt;% mutate( date = as.Date(time, format = &quot;%d %B %Y&quot;), month = format(date, &quot;%Y-%m&quot;) ) Bag of words a címekből corpus_raw &lt;- Corpus(VectorSource(as.character(data_cleansed$title))) #Korpusz tisztítása corpus_filtered &lt;- corpus_raw %&gt;% tm_map(content_transformer(tolower)) %&gt;% tm_map(stripWhitespace) %&gt;% tm_map(removeNumbers) %&gt;% tm_map(removePunctuation, ucp=TRUE) %&gt;% tm_map(removeWords, c(stopwords(&quot;english&quot;), &quot;also&quot;, &quot;one&quot;)) Strukturált mátrix és a fogalmak eloszlása termdocument &lt;- removeSparseTerms(TermDocumentMatrix(corpus_filtered), 0.999) documentterm &lt;- removeSparseTerms(DocumentTermMatrix(corpus_filtered), 0.999) words_frequency_all &lt;- data.frame(Words=row.names(as.matrix(termdocument)), Freq=rowSums(as.matrix(termdocument), na.rm = TRUE)) findFreqTerms(documentterm, lowfreq = 100) [1] &quot;covid&quot; &quot;video&quot; &quot;england&quot; &quot;new&quot; &quot;says&quot; [6] &quot;tier&quot; &quot;vaccine&quot; &quot;johnson&quot; &quot;christmas&quot; &quot;coronavirus&quot; [11] &quot;happened&quot; &quot;lockdown&quot; ggwordcloud(words_frequency_all$Words, words_frequency_all$Freq, max.words = 100) Havonta elemzés data_cleansed_monthly &lt;- data_cleansed %&gt;% group_by(month) %&gt;% summarise(monthly_text = paste(title, collapse = &quot; &quot;)) #Táblázat létrehozása words_monthly &lt;- data.frame(matrix(ncol=nrow(data_cleansed_monthly), nrow=15)) colnames(words_monthly) &lt;- data_cleansed_monthly$month for (i in 1:nrow(data_cleansed_monthly)){ #Corpus létrehozása corpus_monthly_raw &lt;- Corpus(VectorSource(as.character(data_cleansed_monthly$monthly_text[i]))) #Korpusz tisztítása corpus_monthly_filtered &lt;- corpus_monthly_raw %&gt;% tm_map(content_transformer(tolower)) %&gt;% tm_map(removePunctuation, ucp=TRUE) %&gt;% tm_map(removeNumbers) %&gt;% tm_map(removeWords, c(stopwords(&quot;english&quot;), &quot;also&quot;, &quot;one&quot;)) #%&gt;% tm_map(stemDocument) #Term-Document mátrix létrehozása a 10 leggyakoribb szó miatt matrix_monthly &lt;- removeSparseTerms(TermDocumentMatrix(corpus_monthly_filtered), 0.999) words_frequency &lt;- data.frame(Words = matrix_monthly$dimnames$Terms, Freq = matrix_monthly$v) words_monthly[,data_cleansed_monthly$month[i]]&lt;- head(words_frequency[order(-words_frequency$Freq),]$Words,15) #Szófelhők készítése, a corpus nagyságától függően plot(ggwordcloud(words_frequency$Words, words_frequency$Freq, max.words = 100)+ ggtitle(data_cleansed_monthly$month[i])) #wordcloud(corpus_monthly_filtered, max.words=0.1*matrix_monthly$nrow) } words_monthly 2020-10 2020-11 2020-12 1 covid covid covid 2 lockdown lockdown christmas 3 tier england vaccine 4 says vaccine england 5 england says new 6 coronavirus christmas says 7 happened johnson tier 8 manchester new boris 9 boris coronavirus video 10 government happened johnson 11 johnson will rules 12 people boris happened 13 will video coronavirus 14 englands people lockdown 15 greater nhs will Sentiment elemzés #AFINN lexikon betöltése AFINN &lt;- get_sentiments(&quot;afinn&quot;) #Szavakra bontás, pontszámok összeaggregálása words &lt;- left_join(unnest_tokens(data_cleansed, words, title), AFINN, by=c(&quot;words&quot;=&quot;word&quot;)) Error in check_input(x): Input must be a character vector of any length or a list of character vectors, each of which has a length of 1. nr_sentiment_words &lt;- words %&gt;% group_by(date) %&gt;% summarise(non_na_count = sum(!is.na(value))) Error in UseMethod(&quot;group_by_&quot;): no applicable method for &#39;group_by_&#39; applied to an object of class &quot;function&quot; score_by_id &lt;- words %&gt;% group_by(id) %&gt;% summarize(score=sum(value, na.rm=TRUE)) Error in UseMethod(&quot;group_by_&quot;): no applicable method for &#39;group_by_&#39; applied to an object of class &quot;function&quot; #Eredeti adatok mellé rakás data_cleansed &lt;- left_join(data_cleansed, score_by_id, by=&quot;id&quot;) Error in is.data.frame(y): object &#39;score_by_id&#39; not found #Napi (és heti) aggregálás score_by_day &lt;- data_cleansed %&gt;% group_by(date) %&gt;% summarize(score_sum=sum(score, na.rm=TRUE), score_avg=mean(score, na.rm=TRUE)) Error: Problem with `summarise()` input `score_sum`. x object &#39;score&#39; not found i Input `score_sum` is `sum(score, na.rm = TRUE)`. i The error occured in group 1: date = 2020-10-14. Ábrázolás ggplot(nr_sentiment_words, aes(x=date)) + geom_line( aes(y=non_na_count), size=.5, color=&quot;#0fad04&quot;)+ xlab(&quot;Dátum&quot;) + ylab(&quot;AFINN-ban szereplő szavak száma&quot;) + ylim(0, 100)+ geom_hline(yintercept=0, color=&quot;black&quot;, size=.75) + theme_ipsum() Error in ggplot(nr_sentiment_words, aes(x = date)): object &#39;nr_sentiment_words&#39; not found ggplot(score_by_day, aes(x=date)) + geom_line( aes(y=score_avg), size=.5, color=&quot;#0fad04&quot;) + xlab(&quot;Dátum&quot;) + ylab(&quot;Átlagos napi érzelmi pontszám&quot;) + ylim(-5, 5)+ geom_hline(yintercept=0, color=&quot;black&quot;, size=.75) + theme_ipsum() Error in ggplot(score_by_day, aes(x = date)): object &#39;score_by_day&#39; not found "]
]
